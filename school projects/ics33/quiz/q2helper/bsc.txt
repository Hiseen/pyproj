# Setup
c-->from imp import reload
c-->import q2solution
c-->reload(q2solution)
c-->from q2solution import pages, multi_search
c-->import re

# Read/Test Regular Expression Patterns (read from repattern files)
c-->p1a = open('repattern1a.txt').read().rstrip()
c-->print('   ...Testing the pattern p1a: ',p1a)

# The following text should match the pattern
!=-->re.match(p1a,'EC')-->None
!=-->re.match(p1a,'EEBBBBC')-->None
!=-->re.match(p1a,'EEEPDPPDPPPDPPPPDC')-->None
!=-->re.match(p1a,'EEEPPDBBPDBBBBC')-->None
!=-->re.match(p1a,'EEEBBPPPDBBBBPDBBBBC')-->None

# The following text should NOT match the pattern
==-->re.match(p1a,'EEBB')-->None
==-->re.match(p1a,'EBBBC')-->None
==-->re.match(p1a,'EEPPPPPDBBC')-->None
==-->re.match(p1a,'EEPPBBC')-->None
==-->re.match(p1a,'EEBBDC')-->None

# Read/Test Regular Expression Patterns (read from repattern files)
c-->p1b = open('repattern1b.txt').read().rstrip()
c-->print('   ...Testing the pattern p1b: ',p1b)

# The following text should match the pattern
!=-->re.match(p1b,'def f():')-->None
!=-->re.match(p1b,'def a_func(a):')-->None
!=-->re.match(p1b,'def f(a=10):')-->None
!=-->re.match(p1b,'def f(a=+10):')-->None
!=-->re.match(p1b,'def a_func_10_20_(a,bee=+523,c3=-10,dend_10):')-->None

# The following text should NOT match the pattern
==-->re.match(p1b,'def f()')-->None
==-->re.match(p1b,'f():')-->None
==-->re.match(p1b,'def gfun(x,,y):')-->None
==-->re.match(p1b,'def gfun(x y):')-->None
==-->re.match(p1b,'def h(x,y=x):')-->None

# Read/Test Regular Expression Patterns (read from repattern files)
c-->p2a = open('repattern2a.txt').read().rstrip()
c-->print('   ...Testing the pattern p2a: ',p2a)

# The following text should match the pattern
!=-->re.match(p2a,'3')-->None
!=-->re.match(p2a,'1000')-->None
!=-->re.match(p2a,'15-20')-->None
!=-->re.match(p2a,'2048-4096')-->None
!=-->re.match(p2a,'15:10')-->None
!=-->re.match(p2a,'2048:100')-->None

# The following text should NOT match the pattern
==-->re.match(p2a,'03')-->None
==-->re.match(p2a,'5.8')-->None
==-->re.match(p2a,'5-08')-->None
==-->re.match(p2a,'5:08')-->None
==-->re.match(p2a,'15--30')-->None
==-->re.match(p2a,'15::30')-->None
==-->re.match(p2a,'15-30-40')-->None
==-->re.match(p2a,'5-10:20')-->None
==-->re.match(p2a,'15:30:40')-->None

# Testing pages: the following calls should produce the results shown
e-->pages('5')-->[5]
e-->pages('5,6,8,6')-->[5, 6, 6, 8]
e-->pages('5-8')-->[5, 6, 7, 8]
e-->pages('5-8,9,11-13')-->[5, 6, 7, 8, 9, 11, 12, 13]
e-->pages('4:3')-->[4, 5, 6, 7]
e-->pages('4:3,8,11:2,20')-->[4, 5, 6, 7, 8, 11, 12, 13, 20]
e-->pages('3-4,8,11:8,15-22,20:4')-->[3, 4, 8, 11, 12, 13, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 24]

# The following calls should raise exceptions
^-->pages('05')-->AssertionError
^-->pages('05-6')-->AssertionError
^-->pages('6-05')-->AssertionError
^-->pages('7-4')-->AssertionError
^-->pages('5,,5')-->AssertionError
^-->pages('5-:5')-->AssertionError
^-->pages('5:05')-->AssertionError
^-->pages('5:-5')-->AssertionError


# Testing compare_files
==-->multi_search(open('pats.txt'),open('texts.txt'))-->[(1, 'See Spot.', [1, 2]), (2, 'See Snoopy', [1]), (3, '  run.', [2]), (5, 'Run dogs run.', [1, 2, 3]), (6, 'Dogs are great.', [1, 2, 3])]
